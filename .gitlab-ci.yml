stages:
- build
- cleanup
- deploy

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_DEPLOY_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

build:
  script:
    - git submodule sync
    - git submodule update --init --remote --recursive
    - cd horizon/client
    - npm install
    - cd ../..
    - npm install
    - NODE_ENV=production "node_modules/.bin/webpack" --config webpack.production.config.js
    - rm build/vendor.js.map
    - rm build/app.js.map
    - npm run build-server
  stage: build
  only:
    - master
  tags:
    - nodejs
  allow_failure: false

deploy:
  script:
    - distelli deploy -q -y -m "Deployment from Jenkins" --env EVEForecasterProduction
  stage: deploy
  environment: production
  only:
    - master
  tags:
    - nodejs
  allow_failure: false

cleanup_build:
  stage: cleanup
  script:
  - git clean -f
  - rm -rf horizon
  when: on_failure
